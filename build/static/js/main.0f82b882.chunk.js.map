{"version":3,"sources":["redux/contacts/contacts-reducer.js","redux/auth/auth-slice.js","redux/store.js","redux/auth/auth-selectors.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.jsx","components/AppBar/AppBar.jsx","components/PrivateRoute.jsx","components/PublicRoute.jsx","App.js","index.js","redux/contacts/contacts-operations.js","redux/auth/auth-operations.js","redux/contacts/contacts-action.js"],"names":["items","createReducer","fatchContact","fulfilled","_","payload","addContact","state","action","deleteContact","filter","id","handelChangeFilter","loading","pending","rejected","combineReducers","authSlice","createSlice","name","initialState","user","email","token","isLoggedIn","isRefreshing","extraReducers","register","logIn","logOut","fetchCurrentUser","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReduser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","getIsLoggedIn","getUsername","getIsRefreshing","UserMenu","dispatch","useDispatch","useSelector","avatar","defaultAvatar","className","src","alt","width","Button","type","variant","onClick","AuthNav","to","activeClassName","AppBar","Navbar","bg","Container","Brand","exact","PrivatRoute","children","restrictedTo","routeProps","restricted","PublicRoute","shoulRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","ReactDOM","render","StrictMode","document","getElementById","axios","defaults","baseURL","createAsyncThunk","a","rejectWithValue","get","data","constats","post","delete","headers","common","Authorization","credentials","console","log","thunkAPI","getState","persistedToken","createAction"],"mappings":"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","file":"static/js/main.0f82b882.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { handelChangeFilter } from \"./contacts-action\";\nimport {\n  fatchContact,\n  addContact,\n  deleteContact,\n} from \"./contacts-operations.js\";\n\nconst items = createReducer([], {\n  [fatchContact.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, action) => [...state, action.payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [handelChangeFilter]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [fatchContact.pending]: () => true,\n  [fatchContact.fulfilled]: () => false,\n  [fatchContact.rejected]: () => false,\n\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { register, logOut, logIn, fetchCurrentUser } from \"./auth-operations\";\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isRefreshing: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [logOut.fulfilled](state) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [fetchCurrentUser.pending](state) {\r\n      state.isRefreshing = true;\r\n    },\r\n    [fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isRefreshing = false;\r\n    },\r\n    [fetchCurrentUser.rejected](state) {\r\n      state.isRefreshing = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReduser from \"./contacts/contacts-reducer.js\";\nimport authReducer from \"../redux/auth/auth-slice.js\";\nimport logger from \"redux-logger\";\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReduser,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","export const getIsLoggedIn = (state) => state.auth.isLoggedIn;\r\nexport const getUsername = (state) => state.auth.user.name;\r\nexport const getIsRefreshing = (state) => state.auth.isRefreshing;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.0c5bf84e.png\";","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUsername } from \"../../redux/auth/auth-selectors\";\r\nimport { logOut } from \"../../redux/auth/auth-operations\";\r\nimport defaultAvatar from \"./default-avatar.png\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(getUsername);\r\n  const avatar = defaultAvatar;\r\n\r\n  return (\r\n    <div className=\"container-user\">\r\n      <img src={avatar} alt=\"\" width=\"32\" className=\"avatar\" />\r\n      <span className=\"welcome\">Welcome, {name}</span>\r\n      <Button\r\n        type=\"button\"\r\n        variant=\"outline-secondary\"\r\n        className=\"mx-6\"\r\n        onClick={() => dispatch(logOut())}\r\n      >\r\n        Logout\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <>\r\n      <NavLink\r\n        to=\"/register\"\r\n        className=\"nav-link-my\"\r\n        activeClassName=\"nav-link-active-my\"\r\n      >\r\n        Registration\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        className=\"nav-link-my\"\r\n        activeClassName=\"nav-link-active-my\"\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { FcNook } from \"react-icons/fc\";\r\nimport UserMenu from \"../UserMenu\";\r\nimport AuthNav from \"../AuthNav\";\r\n\r\nimport { getIsLoggedIn } from \"../../redux/auth/auth-selectors\";\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand className=\"navBar\">\r\n          <FcNook className=\"navBar-logo\" />\r\n          <NavLink\r\n            exact\r\n            to=\"/\"\r\n            className=\"nav-link-my\"\r\n            activeClassName=\"nav-link-active-my\"\r\n          >\r\n            Phonebook\r\n          </NavLink>\r\n          {isLoggedIn && (\r\n            <NavLink\r\n              to=\"/contacts\"\r\n              className=\"nav-link-my\"\r\n              activeClassName=\"nav-link-active-my\"\r\n            >\r\n              Contacts\r\n            </NavLink>\r\n          )}\r\n        </Navbar.Brand>\r\n        <Navbar.Brand className=\"navBar\">\r\n          {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </Navbar.Brand>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { getIsLoggedIn } from \"../redux/auth/auth-selectors\";\r\n\r\nexport default function PrivatRoute({\r\n  children,\r\n  restrictedTo = \"/\",\r\n  restricted = false,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={restrictedTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { getIsLoggedIn } from \"../redux/auth/auth-selectors\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restrictedTo = \"/\",\r\n  restricted = false,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  const shoulRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shoulRedirect ? <Redirect to={restrictedTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, Suspense, lazy } from \"react\";\nimport { Switch } from \"react-router-dom\";\n\nimport { fetchCurrentUser } from \"./redux/auth/auth-operations\";\nimport { getIsRefreshing } from \"./redux/auth/auth-selectors\";\n\nimport AppBar from \"./components/AppBar\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\n\nconst HomeView = lazy(() => import(\"./views/HomeView\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView\"));\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\nconst ContactsView = lazy(() => import(\"./views/ContactsView\"));\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isRefreshing = useSelector(getIsRefreshing);\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isRefreshing && (\n      <>\n        <AppBar />\n        <Suspense fallback={<p>Loadind</p>}>\n          <Switch>\n            <PublicRoute exact path=\"/\">\n              <HomeView />\n            </PublicRoute>\n\n            <PublicRoute path=\"/register\" restricted>\n              <RegisterView />\n            </PublicRoute>\n\n            <PublicRoute path=\"/login\" restrictedTo=\"/contacts\" restricted>\n              <LoginView />\n            </PublicRoute>\n\n            <PrivateRoute path=\"/contacts\" restrictedTo=\"/login\">\n              <ContactsView />\n            </PrivateRoute>\n          </Switch>\n        </Suspense>\n      </>\n    )\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nexport const fatchContact = createAsyncThunk(\n  \"contact/fatchContacts\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get(\"/contacts\");\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contact/addContacts\",\n  async (constats, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/contacts\", constats);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contact/deleteContacts\",\n  async (id, { rejectWithValue }) => {\n    try {\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk(\"auth/register\", async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post(\"/users/signup\", credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\nconst logIn = createAsyncThunk(\"auth/login\", async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post(\"/users/login\", credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\nconst logOut = createAsyncThunk(\"auth/logout\", async () => {\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  \"auth/refresh\",\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get(\"/users/current\");\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport { register, logOut, logIn, fetchCurrentUser };\r\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const handelChangeFilter = createAction(\"contact/filter\");\n"],"sourceRoot":""}