{"version":3,"sources":["redux/action.js","redux/operations.js","redux/reducer.js","redux/store.js","components/ContactForm/ContactForm.jsx","helpers/filter.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["handelChangeFilter","createAction","axios","defaults","baseURL","fatchContact","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","constats","post","deleteContact","id","delete","items","createReducer","fulfilled","payload","state","action","filter","loading","pending","rejected","combineReducers","store","configureStore","reducer","contacts","contactsReduser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ContactForm","useState","name","setName","number","setNumder","dispatch","useDispatch","сontacts","useSelector","handelChange","e","target","value","toСlear","Form","onSubmit","preventDefault","find","contact","toLowerCase","alert","Group","className","controlId","Label","Control","type","pattern","title","required","onChange","autoComplete","Button","variant","ContactList","includes","trim","getFilterContacts","useEffect","ListGroup","as","map","Item","s","item","text","text_d","button","onClick","Filter","currentTarget","App","loader","Navbar","bg","Container","Brand","Row","Col","sm","color","height","width","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e1c5a15d.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const handelChangeFilter = createAction(\"contact/filter\");\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://619e9bc11ac52a0017ba44a4.mockapi.io\";\n\nexport const fatchContact = createAsyncThunk(\n  \"contact/fatchContacts\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get(\"/contacts\");\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contact/addContacts\",\n  async (constats, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/contacts\", constats);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contact/deleteContacts\",\n  async (id, { rejectWithValue }) => {\n    try {\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { handelChangeFilter } from \"./action\";\nimport { fatchContact, addContact, deleteContact } from \"./operations\";\n\nconst items = createReducer([], {\n  [fatchContact.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, action) => [...state, action.payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [handelChangeFilter]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [fatchContact.pending]: () => true,\n  [fatchContact.fulfilled]: () => false,\n  [fatchContact.rejected]: () => false,\n\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\nimport contactsReduser from \"./reducer\";\nimport logger from \"redux-logger\";\n\n// const contactsPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\nconst store = configureStore({\n  reducer: {\n    contacts:\n      // persistReducer(contactsPersistConfig,\n      contactsReduser,\n    // )\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n// const persistor = persistStore(store);\n\nexport {\n  store,\n  // persistor\n};\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/operations\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumder] = useState(\"\");\n  const dispatch = useDispatch();\n  const сontacts = useSelector((state) => state.contacts.items);\n\n  const handelChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumder(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handelSubmit = (e) => {\n    e.preventDefault();\n    if (\n      сontacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n        // (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(`Пользователь с именем ${name} уже добавлен`);\n    }\n\n    dispatch(addContact({ name, number }));\n    toСlear();\n  };\n\n  const toСlear = () => {\n    setName(\"\");\n    setNumder(\"\");\n  };\n\n  return (\n    <Form onSubmit={handelSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handelChange}\n          autoComplete=\"off\"\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Number</Form.Label>\n        <Form.Control\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handelChange}\n          autoComplete=\"off\"\n        />\n      </Form.Group>\n\n      <Button type=\"submit\" variant=\"outline-secondary\" className=\"mx-6\">\n        Add contact\n      </Button>\n    </Form>\n  );\n}\n","export const getFilterContacts = (contacts, filter) => {\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.trim().toLowerCase())\n  );\n};\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact, fatchContact } from \"../../redux/operations\";\nimport { getFilterContacts } from \"../../helpers/filter\";\n\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { BsTrash } from \"react-icons/bs\";\n\nimport s from \"./ContactList.module.css\";\n\nexport default function ContactList() {\n  const contacts = useSelector(({ contacts: { items, filter } }) =>\n    getFilterContacts(items, filter)\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fatchContact());\n  }, [dispatch]);\n\n  return (\n    <ListGroup as=\"ul\" variant=\"flush\">\n      {contacts.map(({ id, name, number }) => (\n        <ListGroup.Item as=\"li\" className={s.item} key={id}>\n          <div>\n            <p className={s.text}>\n              Name: <span className={s.text_d}>{name}</span>\n            </p>\n            <p className={s.text}>\n              Number: <span className={s.text_d}>{number}</span>\n            </p>\n          </div>\n          <button\n            type=\"button\"\n            id={id}\n            className={s.button}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            <BsTrash />\n          </button>\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  );\n}\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { handelChangeFilter } from \"../../redux/action\";\nimport Form from \"react-bootstrap/Form\";\n\nexport default function Filter() {\n  const filter = useSelector(({ contacts }) => contacts.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Form.Label>Find contacts by name</Form.Label>\n      <Form.Control\n        className=\"form-control-my\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={(e) => dispatch(handelChangeFilter(e.currentTarget.value))}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n}\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useSelector } from \"react-redux\";\n\nimport Container from \"react-bootstrap/Container\";\n// import Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Loader from \"react-loader-spinner\";\n\nimport { FcNook } from \"react-icons/fc\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nfunction App() {\n  const loader = useSelector((state) => state.contacts.loading);\n\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand className=\"navBar\">\n            <FcNook className=\"navBar-logo\" />\n            Phonebook\n          </Navbar.Brand>\n          {/* <Nav className=\"me-auto\">\n            <Nav.Link>Home</Nav.Link>\n            <Nav.Link>Features</Nav.Link>\n            <Nav.Link>Pricing</Nav.Link>\n          </Nav> */}\n        </Container>\n      </Navbar>\n      <Container className=\"p-3\">\n        <Row>\n          <Col sm={4}>\n            <ContactForm />\n            <Container className=\"p-5\">\n              {loader && (\n                <Loader\n                  className=\"loader\"\n                  type=\"Oval\"\n                  color=\"#5C636A\"\n                  height={60}\n                  width={60}\n                />\n              )}\n            </Container>\n          </Col>\n          <Col sm={8}>\n            <Filter />\n            <ContactList />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport {\n  store,\n  // persistor\n} from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactList_text__Jjeq1\",\"text_d\":\"ContactList_text_d__1_0Uu\",\"item\":\"ContactList_item__1wvTB\",\"button\":\"ContactList_button__XFDLi\"};"],"sourceRoot":""}